name: Build and Deploy to GKE

# Adapted from https://docs.github.com/en/actions/guides/deploying-to-google-kubernetes-engine

on:
  push:
    branches:
      - main
      - "force-deploy-*"

concurrency: production

env:
  GKE_CLUSTER: dg
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: lekube
  IMAGE: lekube

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    concurrency: production-deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "1.18.2"
      - name: Test
        run: |-
          go test -race ./...

      # Setup gcloud CLI
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - uses: google-github-actions/setup-gcloud@v1.1.0

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker gcr.io

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/${{ steps.auth.outputs.project_id }}/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/${{ steps.auth.outputs.project_id }}/$IMAGE:$GITHUB_SHA"

      # Grab the image's SHA256 so we can use it instead of a tag (that can be
      # modified underneath us). This has to be done after the image has been
      # pushed. https://stackoverflow.com/questions/39811230/why-doesnt-my-newly-created-docker-have-a-digest
      - name: Capture Docker image's SHA256
        id: image
        run: |-
          FULLIMAGE=$(docker inspect --format='{{index .RepoDigests 0}}' gcr.io/${{ steps.auth.outputs.project_id }}/$IMAGE:$GITHUB_SHA);
          echo "fullimage=${FULLIMAGE}" >> $GITHUB_OUTPUT
      - name: Update GKE deployment
        run: |-
          kubectl -n prod set image deployment/$DEPLOYMENT_NAME $IMAGE="${{ steps.image.outputs.fullimage }}"
          kubectl -n prod rollout status deployment/$DEPLOYMENT_NAME
